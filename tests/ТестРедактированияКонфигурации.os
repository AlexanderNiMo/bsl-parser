///////////////////////////////////////////////////////////////////////////////
//
// Тестирование основной функциональности пакета
// Проверка на соответствие выгрузки эталону
//
// (с) BIA Technologies, LLC
//
///////////////////////////////////////////////////////////////////////////////

#Использовать ".."
#Использовать logos
#Использовать asserts
#Использовать fs

///////////////////////////////////////////////////////////////////////////////

Перем Лог;

///////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС
///////////////////////////////////////////////////////////////////////////////

Функция ПолучитьСписокТестов(Знач ЮнитТестирование) Экспорт

	Лог = Логирование.ПолучитьЛог("Тест");

	МассивТестов = Новый Массив;
	МассивТестов.Добавить("ТестДобавитьВКонфигурациюЭлементы");
	МассивТестов.Добавить("ТестИспользованияРедактораОписаний");
	// МассивТестов.Добавить("ТестУдалитьИзКонфигурацииЭлементы");
	// МассивТестов.Добавить("ТестИзменитьКонфигурацию");

	Возврат МассивТестов;

КонецФункции

Процедура ПередЗапускомТеста() Экспорт

КонецПроцедуры

Процедура ПослеЗапускаТеста() Экспорт

КонецПроцедуры

Процедура ТестДобавитьВКонфигурациюЭлементы() Экспорт
	
	КаталогКонфигурации = ОбъединитьПути(КаталогФикстур(), "configurations", "Demo_8_3_10");
	
	КаталогКонфигурации = ВременныйКаталогКонфигурации(КаталогКонфигурации);
	Конфигурация = РазборКонфигураций.ЗагрузитьКонфигурацию(КаталогКонфигурации);

	Для Каждого Справочник Из Конфигурация.ОписаниеКонфигурации().НайтиОбъектыПоТипу("Справочник") Цикл
		
		ЧтениеКонфигурации.ПрочитатьОписание(Справочник);
		
	КонецЦикла;
	
	НовыйОбъект = РазборКонфигураций.СоздатьОбъектКонфигурации("Справочник", "ТестовыйСправочник");
	Конфигурация.ДобавитьОбъект("Справочник", НовыйОбъект);
	
	Конфигурация.Зафиксировать();
	
	УдалитьФайлы(КаталогКонфигурации);

КонецПроцедуры

Процедура ТестИспользованияРедактораОписаний() Экспорт
	
	// Подготовка
	КаталогКонфигурации = ОбъединитьПути(КаталогФикстур(), "configurations", "Demo_8_3_10");
	
	КаталогКонфигурации = ВременныйКаталогКонфигурации(КаталогКонфигурации);
	Конфигурация = РазборКонфигураций.ЗагрузитьКонфигурацию(КаталогКонфигурации);
	Редактор = Новый РедакторОписания(Конфигурация);
	
	Файлы = Новый СписокЗначений();

	// Выполнение операций редактирования
	
	ИмяФайлаМодуля = Конфигурация.СтруктураКаталогов().ИмяФайлаМодуля("Контрагенты", "Справочник", "ObjectModule");
	
	// Добавим модуль объекта
	Объект = Конфигурация.ОписаниеКонфигурации().НайтиОбъект("Справочник.Банки");
	Редактор.ДобавитьМодульОбъекта(Объект, "ObjectModule", ИмяФайлаМодуля);

	ИмяПроверяемогоФайла = Конфигурация.СтруктураКаталогов().ИмяФайлаМодуля("Банки", "Справочник", "ObjectModule");
	Файлы.Добавить(ИмяПроверяемогоФайла, "Не удалось добавить модуль объекта справочника");
	
	// Добавим общий модуль
	
	ПараметрыМодуля = РазборКонфигураций.СоздатьОбъектКонфигурации("ОбщийМодуль", "НовыйМодуль");	
	Редактор.ДобавитьОбщийМодуль(ПараметрыМодуля, ИмяФайлаМодуля);

	ИмяПроверяемогоФайла = Конфигурация.СтруктураКаталогов().ИмяФайлаМодуля("НовыйМодуль", "ОбщийМодуль", "Module");
	Файлы.Добавить(ИмяПроверяемогоФайла, "Не удалось добавить общий модуль. Нет модуля");
	
	ИмяПроверяемогоФайла = Конфигурация.СтруктураКаталогов().ИмяФайлаОписанияОбъекта("НовыйМодуль", "ОбщийМодуль");
	Файлы.Добавить(ИмяПроверяемогоФайла, "Не удалось добавить общий модуль. Нет описания");
	
	Редактор.ДобавитьМодульКонфигурации("SuperModule", ИмяФайлаМодуля);
	ИмяПроверяемогоФайла = Конфигурация.СтруктураКаталогов().ИмяФайлаМодуля("Configuration", "Configuration", "SuperModule");
	Файлы.Добавить(ИмяПроверяемогоФайла, "Не удалось добавить модуль конфигурации.");
	
	Конфигурация.Зафиксировать();

	Для каждого Файл Из Файлы Цикл
		
		Ожидаем.Что(ФС.ФайлСуществует(Файл.Значение), Файл.Представление).ЭтоИстина();
		
	КонецЦикла;
	
	ТекстОписаниеКонфигурации = Утилиты.ПрочитатьФайл(Конфигурация.СтруктураКаталогов().ИмяФайлаОписанияКонфигурации());
	
	Ожидаем.Что(ТекстОписаниеКонфигурации, "Файл configuration содержит запись о новом модуле").Содержит("НовыйМодуль");

	УдалитьФайлы(КаталогКонфигурации);

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
///////////////////////////////////////////////////////////////////////////////

Функция КаталогФикстур()
	
	Возврат ОбъединитьПути(ТекущийСценарий().Каталог, "common-fixtures");

КонецФункции

Функция ВременныйКаталогКонфигурации(КаталогИсходников)
	
	Каталог = ПолучитьИмяВременногоФайла();
	
	ФС.КопироватьСодержимоеКаталога(КаталогИсходников, Каталог);
	
	Возврат Каталог;
	
КонецФункции

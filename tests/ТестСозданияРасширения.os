///////////////////////////////////////////////////////////////////////////////
//
// Тестирование основной функциональности пакета
// Проверка на соответствие выгрузки эталону
//
// (с) BIA Technologies, LLC
//
///////////////////////////////////////////////////////////////////////////////

#Использовать ".."
#Использовать logos
#Использовать asserts
#Использовать fs

///////////////////////////////////////////////////////////////////////////////

Перем Лог;

///////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС
///////////////////////////////////////////////////////////////////////////////

Функция ПолучитьСписокТестов(Знач ЮнитТестирование) Экспорт

	Лог = Логирование.ПолучитьЛог("Тест");

	МассивТестов = Новый Массив;
	МассивТестов.Добавить("ТестСоздатьПростоеРасширениеВИерархическомФорматеКонфигуратора");
	МассивТестов.Добавить("ТестСоздатьПростоеРасширениеВФорматеEDT");

	Возврат МассивТестов;

КонецФункции

Процедура ПередЗапускомТеста() Экспорт

КонецПроцедуры

Процедура ПослеЗапускаТеста() Экспорт

КонецПроцедуры

Процедура ТестСоздатьПростоеРасширениеВИерархическомФорматеКонфигуратора() Экспорт
	
	КаталогРасширения = ОбъединитьПути("ignore", "extension", "designer");
	КаталогКонфигурации = ОбъединитьПути(КаталогФикстур(), "configurations", "Demo_8_3_10");
	
	Генератор = ГенераторBSL.СоздатьРасширение(ФорматыВыгрузки.Конфигуратор_8_3_10, КаталогРасширения);
	Генератор.Инициализировать("Simple", "Простое расширение", "smpl_");
	
	ПараметрыОбщегоМодуля = ГенераторBSL.ПолучитьОписаниеОбъекта("ОбщийМодуль");
	ПараметрыОбщегоМодуля.Наименование = "Логирование";
	ПараметрыОбщегоМодуля.Сервер = Истина;
	ПараметрыОбщегоМодуля.Клиент = Истина;

	Парсер = ПарсерBSL.ПарсерКонфигурации(КаталогКонфигурации);
	Парсер.ПрочитатьСтруктуруКонфигурации();
	
	Для Каждого Объект Из Парсер.ОписаниеКонфигурации().ОбъектыКонфигурации Цикл
		
		Если Объект.Тип = ТипыОбъектовКонфигурации.ИмяТипаПодсистема() Тогда
			
			Продолжить;
			
		КонецЕсли;

		Парсер.ПрочитатьОписаниеОбъекта(Объект);
		Генератор.ПеренестиОбъектВРасширение(Объект);

	КонецЦикла;

	Генератор.Зафиксировать();
	
КонецПроцедуры

Процедура ТестВключенияВсехМодулейВРасширениеКонфигуратор() Экспорт
	
	КаталогРасширения = ОбъединитьПути("ignore", "extension", "designer");
	КаталогКонфигурации = ОбъединитьПути(КаталогФикстур(), "configurations", "Demo_8_3_10");
	
	Генератор = ГенераторBSL.СоздатьРасширение(ФорматыВыгрузки.Конфигуратор_8_3_10, КаталогРасширения);
	Парсер = ПарсерBSL.ПарсерКонфигурации(КаталогКонфигурации);

	СоздатьПростоеРасширение(Парсер, Генератор);

КонецПроцедуры

Процедура ТестСоздатьПростоеРасширениеВФорматеEDT() Экспорт

	КаталогРасширения = ОбъединитьПути("ignore", "extension", "edt");
	КаталогКонфигурации = ОбъединитьПути(КаталогФикстур(), "edtconfigurations", "Demo_8_3_10", "src");

	Генератор = ГенераторBSL.СоздатьРасширение(ФорматыВыгрузки.EDT, КаталогРасширения);
	Парсер = ПарсерBSL.ПарсерКонфигурации(КаталогКонфигурации);
	
	СоздатьПростоеРасширение(Парсер, Генератор);
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
///////////////////////////////////////////////////////////////////////////////

Процедура ПроверитьРезультатЧтенияВыгрузки(Парсер, КоличествоОбъектов, КоличествоМодулей)

	Ожидаем.Что(Парсер.ОписаниеКонфигурации().ОбъектыКонфигурации.Количество(), "Количество найденных объектов не соответствует фактическому").Равно(КоличествоОбъектов);
	Ожидаем.Что(Парсер.ОписаниеКонфигурации().МодулиКонфигурации.Количество(), "Количество найденных модулей не соответствует фактическому").Равно(КоличествоМодулей);
	
	Для Каждого Объект Из Парсер.ОписаниеКонфигурации().ОбъектыКонфигурации Цикл
		
		Ожидаем.Что(ФС.ФайлСуществует(Объект.ПутьКФайлу), СтрШаблон("Не существует файл [%2] описания объекта ""%1""", Парсер.ПолноеИмяОбъекта(Объект), Объект.ПутьКФайлу)).ЭтоИстина();

	КонецЦикла;

	Для Каждого Объект Из Парсер.ОписаниеКонфигурации().МодулиКонфигурации Цикл
		
		Ожидаем.Что(ФС.ФайлСуществует(Объект.ПутьКФайлу), СтрШаблон("Не существует файл [%2] модуля объекта ""%1""", Парсер.ПолноеИмяОбъекта(Объект), Объект.ПутьКФайлу)).ЭтоИстина();

	КонецЦикла;

КонецПроцедуры

Процедура СоздатьПростоеРасширение(Парсер, Генератор)
	
	Генератор.Инициализировать("Simple", "Простое расширение", "smpl_");
	
	Парсер.ПрочитатьСтруктуруКонфигурации();
	
	Для Каждого Объект Из Парсер.ОписаниеКонфигурации().ОбъектыКонфигурации Цикл
		
		Генератор.ПеренестиОбъектВРасширение(Объект);

	КонецЦикла;

	Генератор.Зафиксировать();	
	
КонецПроцедуры // Введите имя процедуры()


Функция КаталогФикстур()
	
	Возврат ОбъединитьПути(ТекущийСценарий().Каталог, "common-fixtures");

КонецФункции

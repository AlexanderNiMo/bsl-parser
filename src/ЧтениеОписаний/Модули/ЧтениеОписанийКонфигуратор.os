///////////////////////////////////////////////////////////////////////////////
//
// Модуль для чтения описаний метаданных 1с из XML выгрузки
//
///////////////////////////////////////////////////////////////////////////////

#Использовать reflector

///////////////////////////////////////////////////////////////////////////////

Перем Рефлектор;

///////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС
///////////////////////////////////////////////////////////////////////////////

// Выполняет чтение описания объекта с учетом параметров
//
// Параметры:
//   ТекстОписания - Строка - Описание объекта
//   ПараметрыЧтения - Структура - Настройки обработки полей
//
//  Возвращаемое значение:
//   Структура - Данные описания
//
Функция ПолучитьСвойства(ТекстОписания, ПараметрыЧтения) Экспорт

	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.УстановитьСтроку(ТекстОписания);
	
	СырыеДанные = ПрочитатьСвойстваXML(ЧтениеXML, ПараметрыЧтения);
	
	ЧтениеXML.Закрыть();
	
	СвойстваОписания = ОбработатьСырыеДанные(СырыеДанные, ПараметрыЧтения);

	Возврат СвойстваОписания;
	
КонецФункции

// Выполняет чтение описания объекта с учетом параметров
//
// Параметры:
//   ИмяФайла - Строка - Путь к файлу описания
//   ПараметрыЧтения - Структура - Настройки обработки полей
//
//  Возвращаемое значение:
//   Структура - Данные описания
//
Функция ПрочитатьСвойстваИзФайла(ИмяФайла, ПараметрыЧтения) Экспорт

	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.ОткрытьФайл(ИмяФайла);
	
	СырыеДанные = ПрочитатьСвойстваXML(ЧтениеXML, ПараметрыЧтения);
	
	ЧтениеXML.Закрыть();
	
	СвойстваОписания = ОбработатьСырыеДанные(СырыеДанные, ПараметрыЧтения);
	
	Возврат СвойстваОписания;

КонецФункции

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЙ ПРОГРАММНЫЙ ИНТЕРФЕЙС
///////////////////////////////////////////////////////////////////////////////

#Область МетодыЧтения

// Читает строку на разных языках
//
// Параметры:
//   ЧтениеXML - ЧтениеXML - Читатель данных
//
//  Возвращаемое значение:
//   Строка - Данные строки
//
Функция МногоязычнаяСтрока(Знач ЧтениеXML) Экспорт
	
	Имя = ЧтениеXML.Имя;

	Пока ЧтениеXML.Имя <> "v8:content" Цикл
		
		Если ЧтениеXML.Имя = Имя И ЧтениеXML.ТипУзла = ТипУзлаXML.КонецЭлемента Тогда
			
			Возврат "";
			
		КонецЕсли;

		ЧтениеXML.Прочитать();
		
	КонецЦикла;
	
	ЧтениеXML.Прочитать();
	Значение = ЧтениеXML.Значение;
	
	ЧтениеXML.Прочитать();

	Возврат Значение;

КонецФункции

// Читает описание типа
//
// Параметры:
//   ЧтениеXML - ЧтениеXML - Читатель данных
//
//  Возвращаемое значение:
//   Строка - Значение типа
//
Функция ПолучитьТип(Знач ЧтениеXML) Экспорт
	
	Пока ЧтениеXML.Имя <> "v8:Type" Цикл
									
		ЧтениеXML.Прочитать();
		
	КонецЦикла;
	
	ЧтениеXML.Прочитать();
	Значение = ЧтениеXML.Значение;

	Пока ЧтениеXML.Имя <> "Type" Цикл
		
		ЧтениеXML.Прочитать();

	КонецЦикла;
	
	Возврат ЧтениеОписанийБазовый.ПреобразоватьТип(Значение);

КонецФункции

Функция ЗначениеБулево(Знач ЧтениеXML) Экспорт
	
	ЧтениеXML.Прочитать();
	Возврат ЧтениеXML.ИмеетЗначение И СтрСравнить(ЧтениеXML.Значение, "true") = 0;
	
КонецФункции

// Читает состав подсистемы
//
// Параметры:
//   ЧтениеXML - ЧтениеXML - Читатель данных
//
//  Возвращаемое значение:
//   Массив - Состав подсистемы
//
Функция СоставПодсистемы(Знач ЧтениеXML) Экспорт
	
	Значение = Новый Массив();
	
	Пока ЧтениеXML.Прочитать() И НЕ (ЧтениеXML.Имя = "Content" И ЧтениеXML.ТипУзла = ТипУзлаXML.КонецЭлемента)  Цикл
		
		Если ЧтениеXML.ИмеетЗначение Тогда
			
			Строка = ЧтениеXML.Значение;
			
			Позиция = СтрНайти(Строка, ".");

			Если Позиция > 0 Тогда
				
				Значение.Добавить(ТипыОбъектовКонфигурации.НормализоватьИмя(Лев(Строка, Позиция - 1)) + Сред(Строка, Позиция));

			Иначе
				
				Значение.Добавить(ЧтениеXML.Значение);
				
			КонецЕсли
			
		КонецЕсли;

	КонецЦикла;
	
	Возврат Значение;
	
КонецФункции

// Читает состав подсистемы
//
// Параметры:
//   ЧтениеXML - ЧтениеXML - Читатель данных
//
//  Возвращаемое значение:
//   Массив - Состав подсистемы
//
Функция Подчиненные(Знач ЧтениеXML) Экспорт
	
	Значение = Новый Массив();
	
	Пока ЧтениеXML.Прочитать() И НЕ (ЧтениеXML.Имя = "ChildObjects" И ЧтениеXML.ТипУзла = ТипУзлаXML.КонецЭлемента)  Цикл
		
		Если ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			
			Тип = ЧтениеXML.ЛокальноеИмя;
			ЧтениеXML.Прочитать();
 			Имя = ЧтениеXML.Значение;
			Значение.Добавить(СтрШаблон("%1.%2", Тип, Имя));
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Значение;
	
КонецФункции

#КонецОбласти

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
///////////////////////////////////////////////////////////////////////////////

Функция ОбработатьСырыеДанные(СырыеДанные, ПараметрыЧтения)
	
	ДанныеОбъекта = ЧтениеОписанийБазовый.ОбработатьСырыеДанные(СырыеДанные, ПараметрыЧтения);
	
	Если ПараметрыЧтения.ЕстьПодчиненные И СырыеДанные.Свойство("ChildObjects") И ЗначениеЗаполнено(СырыеДанные.ChildObjects) Тогда
		
		ДанныеОбъекта.Вставить("Подчиненные", СырыеДанные.ChildObjects);
		
	КонецЕсли;

	Возврат ДанныеОбъекта;
	
КонецФункции

Функция ПрочитатьСвойстваXML(ЧтениеXML, ПараметрыЧтения)

	Данные = Новый Структура();
	
	ОбработчикиПолей = Новый Структура();
	
	Для Каждого Элемент Из ПараметрыЧтения.Свойства Цикл
		
		Параметр = Элемент.Значение;
		Если НЕ ПустаяСтрока(Параметр.МетодПреобразования) Тогда
			
			ОбработчикиПолей.Вставить(ВРег(Параметр.Поле), Параметр.МетодПреобразования);
			
		КонецЕсли;
		
	КонецЦикла;

	Пока ЧтениеXML.Прочитать() Цикл
		
		Если ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента И ЧтениеXML.Имя = "Properties" Тогда

			Уровень = ЧтениеXML.КонтекстПространствИмен.Глубина;
			// Настройки
			Пока НЕ (ЧтениеXML.ТипУзла = ТипУзлаXML.КонецЭлемента И ЧтениеXML.Имя = "Properties") Цикл

				ЧтениеXML.Прочитать();
				КлючСвойства = "";
				Если ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда

					Если ЧтениеXML.Имя = "RequiredMobileApplicationPermissions" Тогда // атрибуты мобильного приложения

						Пока НЕ (ЧтениеXML.ТипУзла = ТипУзлаXML.КонецЭлемента И ЧтениеXML.Имя = "RequiredMobileApplicationPermissions") Цикл
								
							ЧтениеXML.Прочитать();

						КонецЦикла;

					Иначе

						КлючСвойства = ЧтениеXML.ЛокальноеИмя;
						
						Если ОбработчикиПолей.Свойство(ВРег(КлючСвойства)) Тогда
							
							ЗначениеВМассиве = Новый Массив();
							ЗначениеВМассиве.Добавить(ЧтениеXML);
							
							Значение = Рефлектор.ВызватьМетод(ЭтотОбъект, ОбработчикиПолей[КлючСвойства], ЗначениеВМассиве);
							
						Иначе

							ЧтениеXML.Прочитать();
							
							Уровень = ЧтениеXML.КонтекстПространствИмен.Глубина;
							Пока ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Цикл
									
								ЧтениеXML.Прочитать();
								
							КонецЦикла;

							Значение = ЧтениеXML.Значение;

							Пока Уровень < ЧтениеXML.КонтекстПространствИмен.Глубина Цикл
									
								ЧтениеXML.Прочитать();
								
							КонецЦикла;

						КонецЕсли;

						Данные.Вставить(КлючСвойства, Значение);						

					КонецЕсли;

				КонецЕсли;

			КонецЦикла;
			
		ИначеЕсли ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента И ЧтениеXML.Имя = "ChildObjects" Тогда
			
			Данные.Вставить("ChildObjects", Подчиненные(ЧтениеXML));

		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Данные;

КонецФункции

Рефлектор = Новый Рефлектор();
///////////////////////////////////////////////////////////////////////////////
//
// Модуль помощник по генерации файлов описаний 1с
//
///////////////////////////////////////////////////////////////////////////////

Перем Рефлектор;

///////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЙ ПРОГРАММНЫЙ ИНТЕРФЕЙС
///////////////////////////////////////////////////////////////////////////////

Функция ПолучитьUIDДляГенерацииРасширения() Экспорт
	
    UIDы = Новый Массив();
    UIDы.Добавить("9cd510cd-abfc-11d4-9434-004095e12fc7");
    UIDы.Добавить("9fcd25a0-4822-11d4-9414-008048da11f9");
    UIDы.Добавить("e3687481-0a87-462c-a166-9f34594f9bba");
    UIDы.Добавить("9de14907-ec23-4a07-96f0-85521cb6b53b");
    UIDы.Добавить("51f2d5d8-ea4d-4064-8892-82951750031e");
	UIDы.Добавить("e68182ea-4237-4383-967f-90c1e3370bc7");
	
	Возврат UIDы;
	
КонецФункции

// Закрывает запись описания объекта и всех открытых тэгов
//
// Параметры:
//   Запись - ЗаписьXML - запись описания объекта
//
//  Возвращаемое значение:
//   Строка - XML описание объекта
//
Функция ЗакрытьЗапись(Запись) Экспорт

    Для Инд = 1 По Запись.КонтекстПространствИмен.Глубина Цикл

        Запись.ЗаписатьКонецЭлемента();

    КонецЦикла;

    Возврат Запись.Закрыть();

КонецФункции

Процедура ЗаписатьЗначениеXML(Запись, Имя, Значение) Экспорт
	
	Запись.ЗаписатьНачалоЭлемента(Имя);
	Запись.ЗаписатьТекст(XMLСтрока(Значение));
	Запись.ЗаписатьКонецЭлемента();
	
КонецПроцедуры

Функция ЗаписатьДанные(Запись, Данные, ТипОбъекта, Генератор) Экспорт
	
	ФорматEDT = Генератор = ГенераторОписанийEDT;
	ПараметрыЗаписи = ПараметрыСериализации.ПараметрыЗаписи(ТипОбъекта, ?(ФорматEDT, "EDT", "Designer"));
		
	АргументыПреобразования = Новый Массив(2);
	АргументыПреобразования[0] = Запись;
	
	Для Каждого Элемент Из ПараметрыЗаписи.Свойства Цикл
		
		Значение = Неопределено;

		Если НЕ Данные.Свойство(Элемент.Ключ, Значение) ИЛИ Значение = Неопределено Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		ОписаниеСвойства = Элемент.Значение;
		
		Если ПустаяСтрока(ОписаниеСвойства.МетодПреобразования) Тогда
			
			ГенераторОписанийОбщий.ЗаписатьЗначениеXML(Запись, ОписаниеСвойства.Поле, Значение);
			
		Иначе
			
			Запись.ЗаписатьНачалоЭлемента(ОписаниеСвойства.Поле);

			АргументыПреобразования[1] = Значение;

			Рефлектор.ВызватьМетод(Генератор, ОписаниеСвойства.МетодПреобразования, АргументыПреобразования);
			
			Запись.ЗаписатьКонецЭлемента();
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если Данные.Свойство("ObjectBelonging") Тогда
		
		ГенераторОписанийОбщий.ЗаписатьЗначениеXML(Запись, "ObjectBelonging", Данные.ObjectBelonging);
		
	КонецЕсли;

КонецФункции

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
///////////////////////////////////////////////////////////////////////////////

Рефлектор = Новый Рефлектор();
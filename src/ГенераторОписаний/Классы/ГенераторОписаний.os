///////////////////////////////////////////////////////////////////////////////
//
// Описание модуля
//
///////////////////////////////////////////////////////////////////////////////

Перем Генератор Экспорт;
Перем ПараметрыГенерации Экспорт;

///////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС
///////////////////////////////////////////////////////////////////////////////

// Создает и инициализирует поток записи описаний корневого объекта
//
// Параметры:
//	Описание - Структура - Описание объекта, наименование синоним и прочее
//	ТипОбъекта - Строка - Каноническое имя типа (Configuration, Extension...)
//	ИмяФайла - Строка - Имя файла описания объекта, в который будут записаны данные
//
Функция СоздатьОписаниеКорневогоОбъекта(Описание, ТипОбъекта, ИмяФайла) Экспорт
	
	Запись = Генератор.СоздатьОписаниеКорневогоОбъекта(Описание, ТипОбъекта, ИмяФайла, ПараметрыГенерации);
	ПараметрыГенерации.Вставить("ЗаписьConfiguration", Запись);

	Возврат Запись;
	
КонецФункции

// Сохраняет и закрывает поток записи описаний корневого объекта
//
Процедура ЗафиксироватьОписаниеКорневогоОбъекта() Экспорт
	
	ОбработкаXML.ЗакрытьЗапись(ПараметрыГенерации.ЗаписьConfiguration);
	ПараметрыГенерации.ЗаписьConfiguration = Неопределено;

КонецПроцедуры

// Регистрирует объект в списке объектов конфигурации
//
// Параметры:
//   ОбъектКонфигурации - Произвольный - Объект содержащий реквизиты - Тип и Наименование
//
Процедура ЗарегистрироватьОбъектВКонфигурации(ОбъектКонфигурации) Экспорт
	
	Генератор.ЗарегистрироватьОбъектВКонфигурации(ОбъектКонфигурации, ПараметрыГенерации);
	
КонецПроцедуры

// Создает поток и инициализирует поток записи описания объекта
//
// Параметры:
//	ТипОбъекта - Строка - Каноническое имя типа (Configuration, Extension...)
//	ИмяФайла - Строка - Имя файла описания объекта, в который будут записаны данные
//
//  Возвращаемое значение:
//   ЗаписьXML - Поток записи данных
//
Функция СоздатьЗапись(ТипОбъекта, ИмяФайла) Экспорт
	
	Возврат Генератор.СоздатьЗапись(ТипОбъекта, ПараметрыГенерации, ИмяФайла);
	
КонецФункции

// Записывает служебную информацию об уидах платформенных типов
//
// Параметры:
//   Запись - ЗаписьXML - Поток записи
//   ИмяОбъекта - Строка - Имя объекта конфигурации
//   ТипОбъекта - Строка - Тип объекта конфигурации, см ТипыОбъектовКонфигурации, ОбъектыКонфигурации.md
//
Процедура ЗаписатьПорождаемыеТипы(Запись, ИмяОбъекта, ТипОбъекта) Экспорт
	
	Генератор.ЗаписатьПорождаемыеТипы(Запись, ИмяОбъекта, ТипОбъекта);
	
КонецПроцедуры

Процедура ПриСозданииОбъекта(ФорматВыгрузки, ГенерацияРасширения) Экспорт

	Если ФорматВыгрузки = ФорматыВыгрузки.EDT Тогда
		
		Генератор = ГенераторОписанийEDT;
		
	Иначе
		
		Генератор = ГенераторОписанийКонфигуратор;
		
	КонецЕсли;

	ПараметрыГенерации = Генератор.СоздатьПараметрыГенерации("8.3.10", ГенерацияРасширения);
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
///////////////////////////////////////////////////////////////////////////////

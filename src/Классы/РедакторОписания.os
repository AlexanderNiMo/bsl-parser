///////////////////////////////////////////////////////////////////////////////
//
// Класс-помощник редактирования объектов конфигурации
//
///////////////////////////////////////////////////////////////////////////////

Перем Конфигурация;
Перем Лог;

///////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС
///////////////////////////////////////////////////////////////////////////////

// Добавляет в конфигурацию существующий файл, как модуль объекта
//
// Параметры:
//   ОбъектКонфигурации - СтрокаТаблицыЗначений - Описание объекта конфигурации. См. СтруктурыОписаний.ТаблицаОписанияОбъектовКонфигурации
//   ИмяМодуля - Строка - Тип добавляемого модуля (Module, ManagerModule...)
//   ИмяФайла - Строка - Путь к добавляемому файлу
//
Процедура ДобавитьМодульОбъекта(ОбъектКонфигурации, ИмяМодуля, ИмяФайла) Экспорт
	
	ИмяФайлаНазначения = Конфигурация.СтруктураКаталогов().ИмяФайлаМодуля(ОбъектКонфигурации.Наименование, ОбъектКонфигурации.Тип, ИмяМодуля);
	
	КопироватьФайл(ИмяФайла, ИмяФайлаНазначения);

    Лог.Отладка("Добавлен модуль %3.%1.%2", ОбъектКонфигурации.Наименование, ИмяМодуля, ОбъектКонфигурации.Тип);

КонецПроцедуры

// Добавляет в конфигурацию существующий файл, как общий модуль
//
// Параметры:
//   ПараметрыМодуля - Структура - Свойства модуля: Наименование, Клиент, Сервер, ВызовСервера, ВнешнееСоединение, Привилегированный
//   ИмяФайла - Строка - Путь к добавляемому файлу
//
Процедура ДобавитьОбщийМодуль(ПараметрыМодуля, ИмяФайла) Экспорт
	
	ТипОбщийМодуль = ТипыОбъектовКонфигурации.ИмяТипаОбщийМодуль();

	ОбъектКонфигурации = Конфигурация.ДобавитьОбъект(ТипОбщийМодуль, ПараметрыМодуля);

	ДобавитьМодульОбъекта(ОбъектКонфигурации, "Module", ИмяФайла);

КонецПроцедуры

// Добавляет модуль конфигурации (модуль сеанса, приложения и т.д.)
//
// Параметры:
//   ИмяМодуля - Строка - Тип добавляемого модуля (Module, ManagerModule...)
//   ИмяФайла - Строка - Имя файла содержащего текст модуля
//
Процедура ДобавитьМодульКонфигурации(ИмяМодуля, ИмяФайла) Экспорт
	
	ИмяТипаКонфигурации = ТипыОбъектовКонфигурации.ИмяТипаКонфигурации();

	ИмяФайлаНазначения = Конфигурация.СтруктураКаталогов().ИмяФайлаМодуля(ИмяТипаКонфигурации, ИмяТипаКонфигурации, ИмяМодуля);
	
	КопироватьФайл(ИмяФайла, ИмяФайлаНазначения);

    Лог.Отладка("Добавлен модуль конфигурации %1", ИмяМодуля);

КонецПроцедуры

// Добавляет произвольный файл в конфигурацию, без регистрации и смс
//
// Параметры:
//   ОтносительныйПуть - Строка - Путь в рамках исходников расширения
//   ИсходныйФайл - Строка - Полный путь к добавляемому файлу
//
Процедура ДобавитьФайл(ОтносительныйПуть, ИсходныйФайл) Экспорт
    
    ПолныйПуть = ОбъединитьПути(Конфигурация.СтруктураКаталогов().КорневойКаталог(), ОтносительныйПуть);
    Утилиты.СоздатьРекурсивноКаталоги((Новый Файл(ПолныйПуть)).Путь);
    
    КопироватьФайл(ИсходныйФайл, ПолныйПуть);
    
КонецПроцедуры

// Создает поток записи описания объекта для ручного формирования описания
//
// Параметры:
//   ОбъектКонфигурации - СтрокаТаблицыЗначений - Описание объекта конфигурации. См. СтруктурыОписаний.ТаблицаОписанияОбъектовКонфигурации
//
//  Возвращаемое значение:
//   ЗаписьXML - Поток записи описания
//
Функция СоздатьПотокЗаписиОписания(ОбъектКонфигурации) Экспорт
	
	ПараметрыЗаписи = Конфигурация.ПараметрыЗаписи();
	
	ИмяФайла = ПараметрыЗаписи.СтруктураКаталогов.ИмяФайлаОписанияОбъекта(ОбъектКонфигурации.Наименование, ОбъектКонфигурации.Тип);
	
	Запись = ПараметрыЗаписи.ГенераторОписаний.СоздатьЗапись(ОбъектКонфигурации.Тип, ПараметрыЗаписи.ПараметрыГенерации, ИмяФайла);
	
	Возврат Запись;

КонецФункции

// Выполняет запись в файл Configuration
//	В отличии от стандартной записи, этот метод выполняет вставку записей в конец тэга ChildObjects, без модификации остальных записей
//
// Параметры:
//   Объекты - Массив - Массив регистрируемых объектов
//
Процедура ДописатьРегистрациюОбъектов(Объекты) Экспорт
	
	ПараметрыЗаписи = Конфигурация.ПараметрыЗаписи();

	ФайлОписания = Конфигурация.СтруктураКаталогов().ИмяФайлаОписанияКонфигурации();
	ФайлОписанияORIG = ФайлОписания + ".orig";
	КопироватьФайл(ФайлОписания, ФайлОписанияORIG);

	Чтение = Новый ЧтениеXML();
	Чтение.ОткрытьФайл(ФайлОписанияORIG);
	
	Запись = ПараметрыЗаписи.ГенераторОписаний.СоздатьЗапись("Configuration", ПараметрыЗаписи.ПараметрыГенерации, ФайлОписания);

	Чтение.ПерейтиКСодержимому();
	Чтение.Прочитать();
	
	ОбработкаXML.СкопироватьДанныеXMLДоТэга(Чтение, Запись, "ChildObjects"); // Скопируем данные до тэга
	ОбработкаXML.СкопироватьВложенныеДанныеXML(Чтение, Запись, Ложь); // Скопируем содержимое

	Для Каждого Объект Из Объекты Цикл
		
		ПараметрыЗаписи.ГенераторОписаний.ЗарегистрироватьОбъектВКонфигурации(Объект, Запись);
		
	КонецЦикла;
		
	ОбработкаXML.СкопироватьДанныеXMLДоКонца(Чтение, Запись, Истина);
	
	Чтение.Закрыть();
	Запись.Закрыть();
	
	УдалитьФайлы(ФайлОписанияORIG);
		
КонецПроцедуры


///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
///////////////////////////////////////////////////////////////////////////////

Процедура ПриСозданииОбъекта(РедактируемаяКонфигурация)
	
	Конфигурация = РедактируемаяКонфигурация;
	Лог = ПараметрыПродукта.ПолучитьЛог();
	
КонецПроцедуры
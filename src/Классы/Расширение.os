///////////////////////////////////////////////////////////////////////////////
//
// Описание модуля
//
///////////////////////////////////////////////////////////////////////////////

Перем ОписаниеКонфигурации;
Перем СтруктураКаталогов;
Перем ПараметрыЧтения;
Перем ПараметрыЗаписи;

///////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС
///////////////////////////////////////////////////////////////////////////////

// Читает описание структуры конфигурации
//	* Описание конфигурации
//	* Определяет местоположение описаний (файлов и каталогов)
//
Процедура ПрочитатьСтруктуру() Экспорт
	
	ЧтениеКонфигурации.ПрочитатьСтруктуруКонфигурации(ПараметрыЧтения);
	ЗаписьКонфигурации.УстановитьПризнакИзменений(ПараметрыЗаписи, Ложь);
	
КонецПроцедуры

// Добавляет новый объект в конфигурацию
//
// Параметры:
//   ТипОбъекта - Строка - Тип объекта конфигурации, см ТипыОбъектовКонфигурации, ОбъектыКонфигурации.md
//   ОписаниеОбъекта - Структура, Строка - Данные объекта или его имя
//
//  Возвращаемое значение:
//   СтрокаТаблицыЗначений - Описание объекта конфигурации. См. СтруктурыОписаний.ТаблицаОписанияОбъектовКонфигурации
//
Функция ДобавитьОбъект(ТипОбъекта, ОписаниеОбъекта) Экспорт
	
	ОбъектКонфигурации = РедакторКонфигурации.ДобавитьОбъект(ОписаниеКонфигурации, ТипОбъекта, ОписаниеОбъекта);

	ЗаписьКонфигурации.ПриДобавленииОбъекта(ОбъектКонфигурации);
	
	Возврат ОбъектКонфигурации;
	
КонецФункции

// Добавляет объект базовой конфигурации в расширение
//
// Параметры:
//   ОбъектРодительскойКонфигурации - СтрокаТаблицыЗначений - Описание объекта родительской конфигурации
//
//  Возвращаемое значение:
//   СтрокаТаблицыЗначений - Описание объекта расширения. См. СтруктурыОписаний.ТаблицаОписанияОбъектовКонфигурации
//
Функция ДобавитьОбъектВРасширение(ОбъектРодительскойКонфигурации) Экспорт
	
	ОбъектКонфигурации = РедакторРасширения.ДобавитьОбъектВРасширение(ОписаниеКонфигурации, ОбъектРодительскойКонфигурации);

	ЗаписьКонфигурации.ПриДобавленииОбъекта(ОбъектКонфигурации);
	
	Возврат ОбъектКонфигурации;
	
КонецФункции

// Записывает данные на диск
//
Процедура Зафиксировать() Экспорт
	
	ЗаписьКонфигурации.Зафиксировать(ПараметрыЗаписи);
	
КонецПроцедуры

// Читает описание переданного объекта, его свойства и параметры
//
// Параметры:
//   ОбъектКонфигурации - СтрокаТаблицыЗначений - Описание объекта конфигурации. См. СтруктурыОписаний.ТаблицаОписанияОбъектовКонфигурации
//
Процедура ПрочитатьОписаниеОбъекта(ОбъектКонфигурации) Экспорт
	
	ЧтениеКонфигурации.ПрочитатьОписание(ОбъектКонфигурации);
	
КонецПроцедуры

// Сохраняет описание переданного объекта, его свойства и параметры
//
// Параметры:
//   ОбъектКонфигурации - СтрокаТаблицыЗначений - Описание объекта конфигурации. См. СтруктурыОписаний.ТаблицаОписанияОбъектовКонфигурации
//
Процедура ЗаписатьОписаниеОбъекта(ОбъектКонфигурации) Экспорт
	
	ЗаписьКонфигурации.СохранитьОписание(ОбъектКонфигурации);
	
КонецПроцедуры

// Возвращает описание конфигурации
//
//  Возвращаемое значение:
//   ДанныеКонфигурации - Описание конфигурации
//
Функция ОписаниеКонфигурации() Экспорт
	
	Возврат ОписаниеКонфигурации;

КонецФункции

// Возвращает объект для работы с иерархией каталогов расширения
//
//  Возвращаемое значение:
//   СтруктураКаталоговКонфигурации - объект для работы с иерархией каталогов расширения
//
Функция СтруктураКаталогов() Экспорт
	
	Возврат СтруктураКаталогов;
	
КонецФункции

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЙ ПРОГРАММНЫЙ ИНТЕРФЕЙС
///////////////////////////////////////////////////////////////////////////////

// Возвращает служебные параметры для чтения данных с диска
//
//  Возвращаемое значение:
//   Структура - Параметры чтения
//
Функция ПараметрыЧтения() Экспорт
	
	Возврат ПараметрыЧтения;
	
КонецФункции

// Возвращает служебные параметры для записи данных на диск
//
//  Возвращаемое значение:
//   Структура - Параметры записи
//
Функция ПараметрыЗаписи() Экспорт
	
	Возврат ПараметрыЗаписи;
	
КонецФункции

// Выполняет поиск модулей конфигурации
// Найденные модули будут доступны ОписаниеКонфигурации().Модули
//
Процедура НайтиМодули() Экспорт
	
	ЧтениеКонфигурации.НайтиМодулиКонфигурации(ПараметрыЧтения);
	
КонецПроцедуры

// Выполняет чтение вложенных подсистем и привязку их к объектам конфигурации
//
Процедура ЗаполнитьПодсистемыОбъектовКонфигурации() Экспорт
	
	ЧтениеКонфигурации.ЗаполнитьПодсистемыОбъектовКонфигурации(ПараметрыЗаписи);
	
КонецПроцедуры

// Читает и выполняет анализ содержимого модуля
//	Устанавливает реквизиты "НаборБлоков" и "Содержимое"
// Параметры:
//   СтрокаМодуль - СтрокаТаблицыЗначений - Базовое описание модуля
//
Процедура ПрочитатьСодержимоеМодуля(СтрокаМодуль) Экспорт
	
	ЧтениеКонфигурации.ПрочитатьСодержимоеМодуля(СтрокаМодуль);
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
///////////////////////////////////////////////////////////////////////////////

Процедура ПриСозданииОбъекта(пСтруктураКаталогов)
	
	ОписаниеКонфигурации = Новый ДанныеКонфигурации(ЭтотОбъект);
	СтруктураКаталогов = пСтруктураКаталогов;

	ПараметрыЧтения = ЧтениеКонфигурации.СоздатьПараметрыЧтения(ЭтотОбъект, "Extension");
	ПараметрыЗаписи = ЗаписьКонфигурации.СоздатьПараметрыЗаписи(ЭтотОбъект, "Extension");

КонецПроцедуры

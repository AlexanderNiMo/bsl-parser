///////////////////////////////////////////////////////////////////////////////
//
// Класс описывающий структуру конфигурации
//
///////////////////////////////////////////////////////////////////////////////

Перем ОбъектыКонфигурации Экспорт;
Перем СвойстваКонфигурации Экспорт;
Перем МодулиКонфигурации Экспорт;

Перем ФормыКонфигурации Экспорт;
Перем КомандыКонфигурации Экспорт;

Перем ПодсистемыКонфигурации Экспорт;

///////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС
///////////////////////////////////////////////////////////////////////////////

Функция НайтиОбъект(Знач ИмяОбъекта, Знач ТипОбъекта = Неопределено) Экспорт
	
	Если ТипОбъекта = Неопределено 
		И СтрНайти(ИмяОбъекта, ".") 
		И ТипыОбъектовКонфигурации.ОписаниеТипаПоИмени(Лев(ИмяОбъекта, СтрНайти(ИмяОбъекта, ".") - 1)) <> Неопределено Тогда

		ТипОбъекта = Лев(ИмяОбъекта, СтрНайти(ИмяОбъекта, ".") - 1);
		ИмяОбъекта = Сред(ИмяОбъекта, СтрНайти(ИмяОбъекта, ".") + 1);
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТипОбъекта) Тогда

		ТипОбъекта = ТипыОбъектовКонфигурации.НормализоватьИмя(ТипОбъекта);
		НайденныеОбъекты = ОбъектыКонфигурации.НайтиСтроки(Новый Структура("Тип, Наименование", ТипОбъекта, ИмяОбъекта));
		
		Если НайденныеОбъекты.Количество() Тогда
			
			Возврат НайденныеОбъекты[0];
			
		КонецЕсли;
		
	Иначе
		
		Возврат ОбъектыКонфигурации.Найти(ИмяОбъекта, "Наименование");

	КонецЕсли;

	Возврат Неопределено;

КонецФункции

Функция ПолучитьОбъектыТипа(Знач ТипОбъекта) Экспорт
	
	ТипОбъекта = ТипыОбъектовКонфигурации.НормализоватьИмя(ТипОбъекта);

	Возврат ОбъектыКонфигурации.НайтиСтроки(Новый Структура("Тип", ТипОбъекта));

КонецФункции



Процедура ПриСозданииОбъекта() Экспорт
	
	ОбъектыКонфигурации = СтруктурыОписаний.ТаблицаОписанияОбъектовКонфигурации();
	МодулиКонфигурации = СтруктурыОписаний.ТаблицаОписанияМодулей();
	
	// todo сделать чтение форм
	ФормыКонфигурации = Новый ТаблицаЗначений;
	ФормыКонфигурации.Колонки.Добавить("Родитель");
	ФормыКонфигурации.Колонки.Добавить("ЭтоУправляемаяФорма");
	ФормыКонфигурации.Колонки.Добавить("Наименование");

	// todo сделать чтение команд
	КомандыКонфигурации = Новый ТаблицаЗначений;
	КомандыКонфигурации.Колонки.Добавить("Родитель");
	КомандыКонфигурации.Колонки.Добавить("Наименование");
	
КонецПроцедуры


///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
//
// Модуль содержит полезные методы для работы с XML
//
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС
///////////////////////////////////////////////////////////////////////////////

// Ищет в потоке XML следующий элемент с указанным именем
//
// Параметры:
//   Чтение - ЧтениеXML - Поток чтения
//   ИмяЭлемента - Строка - Имя элемента XML
//
//  Возвращаемое значение:
//   Булево - Успешность поиска
//
Функция ПерейтиКСледующемуЭлементу(Чтение, ИмяЭлемента) Экспорт
	
	Уровень = 0;

	Пока Чтение.Прочитать() Цикл

		Если Чтение.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			
			Уровень = Уровень + 1;
			
			Если Уровень = 1 И Чтение.Имя = ИмяЭлемента Тогда
			
				Возврат Истина;
				
			КонецЕсли
			
		ИначеЕсли Чтение.ТипУзла = ТипУзлаXML.КонецЭлемента Тогда
			
			Уровень = Уровень - 1;
			
			Если Уровень = -1 Тогда
				
				Прервать;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Ложь;

КонецФункции

// Выполняет перенос данных из одного потока XML в другой
//	Перенос выполняется только подчиненных элементов, с глубинной большей или равной текущей
//
// Параметры:
//   Чтение - ЧтениеXML - Поток чтения
//   Запись - ЗаписьXML - Поток записи
//   КопироватьВсеЭлементыУровня - Булево 
//		- Истина - копируются все вложенные элементы
//		- Ложь - копируются только текущий элемент со всеми вложенными
//
Процедура СкопироватьВложенныеДанныеXML(Чтение, Запись, КопироватьВсеЭлементыУровня = Ложь) Экспорт
	
	Уровень = 0;
	УровеньВыхода = ?(КопироватьВсеЭлементыУровня, -1, 0);

	Пока Истина Цикл
		
		Если Чтение.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			
			Уровень = Уровень + 1;
			
		ИначеЕсли Чтение.ТипУзла = ТипУзлаXML.КонецЭлемента Тогда
			
			Уровень = Уровень - 1;
			
			Если Уровень = УровеньВыхода Тогда
				
				Прервать;
				
			КонецЕсли;
			
		КонецЕсли;
		
		ЗаписатьТекущий(Запись, Чтение);

		Чтение.Прочитать();

	КонецЦикла;
	
КонецПроцедуры

// Метод выполняет запись текущего значения чтенияXML
//	Метод реализован тк стандартный метод Запись.ЗаписатьТекущий имеет сайдэффект и не понятное поведение
//
// Параметры:
//   Чтение - ЧтениеXML - Поток чтения
//   Запись - ЗаписьXML - Поток записи
//
Процедура ЗаписатьТекущий(Запись, Чтение) Экспорт

	Если Чтение.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			
		Запись.ЗаписатьНачалоЭлемента(Чтение.Имя);
		
		Пока Чтение.ПрочитатьАтрибут() Цикл
			
			Запись.ЗаписатьАтрибут(Чтение.Имя, Чтение.Значение);

		КонецЦикла;
		
	ИначеЕсли Чтение.ТипУзла = ТипУзлаXML.КонецЭлемента Тогда
		
		Запись.ЗаписатьКонецЭлемента();

	ИначеЕсли Чтение.ТипУзла = ТипУзлаXML.Текст Тогда
		
		Запись.ЗаписатьТекст(Чтение.Значение);
		
	КонецЕсли;

КонецПроцедуры

// Ищет в потоке XML следующий элемент с указанным именем, 
//	 при этом выполняет копирование прочитанных данных в выходной поток
//
// Параметры:
//   Чтение - ЧтениеXML - Поток чтения
//   Запись - ЗаписьXML - Поток записи
//   ИмяЭлемента - Строка - Имя элемента XML
//
//  Возвращаемое значение:
//   Булево - Искомый элемент найден
//
Функция СкопироватьДанныеXMLДоТэга(Чтение, Запись, ИмяЭлемента) Экспорт
	
	Пока Чтение.Прочитать() Цикл
		
		Если Чтение.ЛокальноеИмя = ИмяЭлемента Тогда
			
			Возврат Истина;
			
		КонецЕсли;

		ЗаписатьТекущий(Запись, Чтение);
		
	КонецЦикла;
	
	Возврат Ложь;

КонецФункции

// Выполняет перенос данных из одного потока XML в другой
//	Перенос выполняется с текущей позиции до конца файла
//
// Параметры:
//   Чтение - ЧтениеXML - Поток чтения
//   Запись - ЗаписьXML - Поток записи
//   ЗаписатьТекущий - Булево - Перенести текущий элемент в выходной поток
//
Процедура СкопироватьДанныеXMLДоКонца(Чтение, Запись, ЗаписатьТекущий = Ложь) Экспорт
	
	Если ЗаписатьТекущий Тогда
		
		ЗаписатьТекущий(Запись, Чтение);
		
	КонецЕсли;

	Пока Чтение.Прочитать() Цикл
		
		ЗаписатьТекущий(Запись, Чтение);
		
	КонецЦикла;
	
КонецПроцедуры

// Записывает произвольное значение в XML поток
//
// Параметры:
//   Запись - ЗаписьXML - Поток записи XML
//   Имя - Строка - Имя реквизита, тэг
//   Значение - Произвольный - Записываемое значение
//
Процедура ЗаписатьЗначениеXML(Запись, Имя, Значение) Экспорт
	
	Запись.ЗаписатьНачалоЭлемента(Имя);
	Запись.ЗаписатьТекст(XMLСтрока(Значение));
	Запись.ЗаписатьКонецЭлемента();
	
КонецПроцедуры

// Закрывает запись описания объекта и всех открытых тэгов
//
// Параметры:
//   Запись - ЗаписьXML - запись описания объекта
//
//  Возвращаемое значение:
//   Строка - XML описание объекта
//
Функция ЗакрытьЗапись(Запись) Экспорт

    Для Инд = 1 По Запись.КонтекстПространствИмен.Глубина Цикл

        Запись.ЗаписатьКонецЭлемента();

    КонецЦикла;

    Возврат Запись.Закрыть();

КонецФункции




///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
///////////////////////////////////////////////////////////////////////////////


Функция СоздатьПараметрыЗаписи(Конфигурация, ТипКорневогоЭлемента) Экспорт

	ПараметрыЗаписи = Новый Структура();
	ПараметрыЗаписи.Вставить("ОписаниеКонфигурации", Конфигурация.ОписаниеКонфигурации());
	ПараметрыЗаписи.Вставить("СтруктураКаталогов", Конфигурация.СтруктураКаталогов());
	ПараметрыЗаписи.Вставить("ТипКорневогоЭлемента", ТипКорневогоЭлемента);
	ПараметрыЗаписи.Вставить("ФорматВыгрузки", ПараметрыЗаписи.СтруктураКаталогов.ФорматВыгрузки());	
	ПараметрыЗаписи.Вставить("Изменения", Новый Структура("ИзмененКорневойОбъект", Ложь));

	ГенераторОписаний = Новый ГенераторОписаний(ПараметрыЗаписи.ФорматВыгрузки, ТипКорневогоЭлемента = ТипыОбъектовКонфигурации.ИмяТипаРасширения());
	
	ПараметрыЗаписи.Вставить("ГенераторОписаний", ГенераторОписаний);

	Возврат Новый ФиксированнаяСтруктура(ПараметрыЗаписи);
	
КонецФункции

Функция СохранитьОписание(ОбъектКонфигурации) Экспорт
	
	ПараметрыЗаписи = ОбъектКонфигурации.Конфигурация.ПараметрыЗаписи();
	ДанныеОбъекта = ОбъектКонфигурации.Описание;

	ИмяФайла = ПараметрыЗаписи.СтруктураКаталогов.ИмяФайлаОписанияОбъекта(ОбъектКонфигурации.Наименование, ОбъектКонфигурации.Тип);

	Запись = ПараметрыЗаписи.ГенераторОписаний.СоздатьЗапись(ОбъектКонфигурации.Тип, ИмяФайла);
	
	ОписаниеСвойств = СтруктурыОписаний.ОписаниеСвойствОбъекта(ОбъектКонфигурации.Тип);

	ПараметрыЗаписи.ГенераторОписаний.Генератор.ЗаписатьПорождаемыеТипы(Запись, ДанныеОбъекта.Наименование, ОбъектКонфигурации.Тип);
	ПараметрыЗаписи.ГенераторОписаний.Генератор.ЗаписатьСвойства(Запись, ОбъектКонфигурации.Тип, ДанныеОбъекта);
	
	Если ОписаниеСвойств.ЕстьПодчиненные Тогда
		
		ПараметрыЗаписи.ГенераторОписаний.Генератор.Подчиненные(Запись, ?(ДанныеОбъекта.Свойство("Подчиненные"), ДанныеОбъекта.Подчиненные, Неопределено));
		
	КонецЕсли;
	
	ОбработкаXML.ЗакрытьЗапись(Запись);
	
КонецФункции

Функция Зафиксировать(ПараметрыЗаписи) Экспорт

	ПараметрыЗаписи.ОписаниеКонфигурации.ОбъектыКонфигурации.Сортировать("Тип, Наименование");
	
	Если ПараметрыЗаписи.Изменения.ИзмененКорневойОбъект Тогда
		
		ИмяФайлаОписания = ПараметрыЗаписи.СтруктураКаталогов.ИмяФайлаОписанияКонфигурации();
		
		ПараметрыЗаписи.ГенераторОписаний.СоздатьОписаниеКорневогоОбъекта(
			ПараметрыЗаписи.ОписаниеКонфигурации.СвойстваКонфигурации, 
			ПараметрыЗаписи.ТипКорневогоЭлемента, 
			ИмяФайлаОписания);
	
		Для Каждого Стр Из ПараметрыЗаписи.ОписаниеКонфигурации.ОбъектыКонфигурации Цикл
			
			Если Стр.Тип <> ПараметрыЗаписи.ТипКорневогоЭлемента И Стр.Родитель = Неопределено Тогда
				
				ПараметрыЗаписи.ГенераторОписаний.ЗарегистрироватьОбъектВКонфигурации(Стр);
				
			КонецЕсли;
			
		КонецЦикла;
		
		ПараметрыЗаписи.ГенераторОписаний.ЗафиксироватьОписаниеКорневогоОбъекта();

	КонецЕсли;	

КонецФункции

// Создает структуру данных объекта
//
// Параметры:
//   ТипОбъекта - Строка - Тип объекта конфигурации, см ТипыОбъектовКонфигурации, ОбъектыКонфигурации.md
//   Наименование - Строка - Имя объекта
//
//  Возвращаемое значение:
//   Структура - Пустышка описания объекта
//
Функция ПолучитьОписаниеОбъекта(ТипОбъекта, Наименование = Неопределено) Экспорт
	
	ОписаниеОбъекта = СтруктурыОписаний.СоздатьОбъект(ТипОбъекта, Наименование);
	
	Возврат ОписаниеОбъекта;
	
КонецФункции
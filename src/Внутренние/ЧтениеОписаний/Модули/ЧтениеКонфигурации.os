#Использовать fs

Функция СоздатьПараметрыЧтения(Конфигурация, ТипКорневогоЭлемента) Экспорт

	ПараметрыЧтения = Новый Структура();
	ПараметрыЧтения.Вставить("ОписаниеКонфигурации", Конфигурация.ОписаниеКонфигурации());
	ПараметрыЧтения.Вставить("СтруктураКаталогов", Конфигурация.СтруктураКаталогов());
	ПараметрыЧтения.Вставить("ТипКорневогоЭлемента", ТипКорневогоЭлемента);
	ПараметрыЧтения.Вставить("ФорматВыгрузки", ПараметрыЧтения.СтруктураКаталогов.ФорматВыгрузки());	

	Если ПараметрыЧтения.ФорматВыгрузки = ФорматыВыгрузки.EDT Тогда
		ЧитательОписаний = ЧтениеОписанийEDT;
	Иначе
		ЧитательОписаний = ЧтениеОписанийКонфигуратор;
	КонецЕсли;
	
	ПараметрыЧтения.Вставить("ЧитательОписаний", ЧитательОписаний);

	Возврат ПараметрыЧтения;
	
КонецФункции

// Читает описание структуры конфигурации
//	* Описание конфигурации
//	* Объекты конфигурации, включая все подсистемы
//	* Выполняет привязку объектов к подсистемам
//	* Определяет местоположение описаний (файлов и каталогов)
//
Процедура ПрочитатьСтруктуруКонфигурации(ПараметрыЧтения) Экспорт
	
	ПрочитатьОписаниеКонфигурации(ПараметрыЧтения);
	
	ЗаполнитьИменаФайлов(ПараметрыЧтения);

КонецПроцедуры

// Читает описание объекта конфигурации
//
// Параметры:
//   ОбъектКонфигурации - СтрокаТаблицыЗначений - Описание объекта конфигурации. См. СтруктурыОписаний.ТаблицаОписанияОбъектовКонфигурации
//
Процедура ПрочитатьОписание(ОбъектКонфигурации) Экспорт
	
	ПараметрыЧтения = ОбъектКонфигурации.Конфигурация.ПараметрыЧтения();
	ОбъектКонфигурации.Описание = ПрочитатьФайлОписанияОбъекта(ПараметрыЧтения, ОбъектКонфигурации.ПутьКФайлу, ОбъектКонфигурации.Тип);
	
КонецПроцедуры

// Выполняет чтение подсистем и привязку объектов к ним
//
Процедура ЗаполнитьПодсистемыОбъектовКонфигурации(ПараметрыЧтения) Экспорт
	
	// дополним объекты информацией о подсистемах
	ПодсистемыКонфигурации = ПрочитатьПодсистемыКонфигурации(ПараметрыЧтения);

	ПараметрыЧтения.ОписаниеКонфигурации.ПодсистемыКонфигурации = ПодсистемыКонфигурации;

	Для Каждого ОбъектКонфигурации Из ПараметрыЧтения.ОписаниеКонфигурации.ОбъектыКонфигурации Цикл
		
		Подсистемы = ПодсистемыКонфигурации.НайтиСтроки(Новый Структура("ОбъектМетаданных", ОбъектКонфигурации.Тип + "." + ОбъектКонфигурации.Наименование));
		
		Если Подсистемы.Количество()  Тогда

			// ставим первую
			ОбъектКонфигурации.Подсистемы = Подсистемы;

		КонецЕсли;

	КонецЦикла;

КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
///////////////////////////////////////////////////////////////////////////////

Функция ПрочитатьОписаниеКонфигурации(ПараметрыЧтения)
	
	ОписаниеКонфигурации = ПараметрыЧтения.ОписаниеКонфигурации;
	СтруктураКаталогов = ПараметрыЧтения.СтруктураКаталогов;
	
	ФайлКонфигурации = СтруктураКаталогов.ИмяФайлаОписанияКонфигурации();
	
	Если Не ФС.ФайлСуществует(ФайлКонфигурации) Тогда

		ВызватьИсключение СтрШаблон("Файл описания конфигурации ""%1"" не обнаружен", ФайлКонфигурации);

	КонецЕсли;
	
	ДанныеКонфигурации = ПрочитатьФайлОписанияОбъекта(ПараметрыЧтения, ФайлКонфигурации, ПараметрыЧтения.ТипКорневогоЭлемента);
	
	// добавим руками объект "Configuration" для модулей приложения
	НовСтрока = РедакторКонфигурации.ДобавитьОбъект(ОписаниеКонфигурации, ПараметрыЧтения.ТипКорневогоЭлемента, ДанныеКонфигурации);
	НовСтрока.ПутьКФайлу = ФайлКонфигурации;
	
	Для Каждого Подчиненный Из ДанныеКонфигурации.Подчиненные Цикл
		
		ЧастиИмени = СтрРазделить(Подчиненный, ".");

		РедакторКонфигурации.ДобавитьОбъект(ОписаниеКонфигурации, ЧастиИмени[0], ЧастиИмени[1]);
		
	КонецЦикла;
	
	ДанныеКонфигурации.Удалить("Подчиненные");
	
	ОписаниеКонфигурации.СвойстваКонфигурации = ДанныеКонфигурации;

КонецФункции

Функция ПрочитатьФайлОписанияОбъекта(ПараметрыЧтения, ПутьКФайлу, ТипОбъекта)

	ПараметрыЧтенияОбъекта = ПараметрыСериализации.ПараметрыЧтения(ТипОбъекта, ПараметрыЧтения.ФорматВыгрузки);
	
	Описание = ПараметрыЧтения.ЧитательОписаний.ПрочитатьСвойстваИзФайла(ПутьКФайлу, ПараметрыЧтенияОбъекта);

	Возврат Описание;
	
КонецФункции

Функция ПолучитьОписаниеМодуляПоИмениФайла(Знач ИмяФайлаМодуля, ОбъектКонфигурации, ОписаниеКонфигурации)

	НовыйМодульКонфигурации = Неопределено;
	
	ПустаяСтрокаМодульКонфигурации = Новый Структура(
		"ПутьКФайлу,	ТипМодуля,	ОписаниеМодуля,		Родитель, 		РодительФорма, 	РодительКоманда, 	НаборБлоков, 	Содержимое", 
		"", 			"", 		Новый Структура,	Неопределено, 	Неопределено, 	Неопределено, 		Неопределено, 	Неопределено);
	
	ТипЭтогоМодуля = ТипыМодуля.ТипМодуляПоИмениФайла(ИмяФайлаМодуля);

	Если Не ПустаяСтрока(ТипЭтогоМодуля) Тогда
		
		ФормаОбъекта = Неопределено;
		КомандаОбъекта = Неопределено;
		
		Если ТипЭтогоМодуля = ТипыМодуля.МодульОбъекта
			ИЛИ ТипЭтогоМодуля = ТипыМодуля.МодульМенеджера
			ИЛИ ТипЭтогоМодуля = ТипыМодуля.ОбщийМодуль
			ИЛИ ТипЭтогоМодуля = ТипыМодуля.МодульУправляемогоПриложения
			ИЛИ ТипЭтогоМодуля = ТипыМодуля.МодульСеанса
			ИЛИ ТипЭтогоМодуля = ТипыМодуля.МодульВнешнегоСоединения
			ИЛИ ТипЭтогоМодуля = ТипыМодуля.МодульОбычногоПриложения  Тогда

		ИначеЕсли ТипыМодуля.ЭтоМодульФормы(ТипЭтогоМодуля) Тогда

			ФормаОбъекта = ОписаниеКонфигурации.ФормыКонфигурации.Добавить();
			ФормаОбъекта.Родитель = ОбъектКонфигурации;
			ФормаОбъекта.ЭтоУправляемаяФорма = ТипЭтогоМодуля = ТипыМодуля.МодульУправляемойФормы;
			ФормаОбъекта.Наименование = ПолучитьИмяФормыИзИмениФайлаМодуля(ИмяФайлаМодуля);

		ИначеЕсли ТипЭтогоМодуля = ТипыМодуля.МодульКоманды Тогда

			КомандаОбъекта = ОписаниеКонфигурации.КомандыКонфигурации.Добавить();
			КомандаОбъекта.Родитель = ОбъектКонфигурации;
			КомандаОбъекта.Наименование = ПолучитьИмяКомандыИзИмениФайлаМодуля(ИмяФайлаМодуля);

		Иначе

			ВызватьИсключение "Тип модуля: " + ТипЭтогоМодуля + " не имеет алгоритма разбора";

		КонецЕсли;
		
		НовыйМодульКонфигурации = ОписаниеКонфигурации.МодулиКонфигурации.Добавить();
		ЗаполнитьЗначенияСвойств(НовыйМодульКонфигурации, ПустаяСтрокаМодульКонфигурации);
		НовыйМодульКонфигурации.ТипМодуля = ТипЭтогоМодуля;
		НовыйМодульКонфигурации.ПутьКФайлу = ИмяФайлаМодуля;
		НовыйМодульКонфигурации.Родитель = ОбъектКонфигурации;
		НовыйМодульКонфигурации.РодительФорма = ФормаОбъекта;
		НовыйМодульКонфигурации.РодительКоманда = КомандаОбъекта;
		
	КонецЕсли;

	Если НовыйМодульКонфигурации <> Неопределено Тогда
		
		ЗаполнитьЗначенияСвойств(ПустаяСтрокаМодульКонфигурации, НовыйМодульКонфигурации);
		
	КонецЕсли;
	
	Возврат ПустаяСтрокаМодульКонфигурации;

КонецФункции

///////////////////////////////////////////////////////////////////

Процедура ЗаполнитьИменаФайлов(ПараметрыЧтения)

	ОписаниеКонфигурации = ПараметрыЧтения.ОписаниеКонфигурации;
	СтруктураКаталогов = ПараметрыЧтения.СтруктураКаталогов;

	Для Каждого СтрокаОбъектКонфигурации Из ОписаниеКонфигурации.ОбъектыКонфигурации Цикл
		
		Если ПустаяСтрока(СтрокаОбъектКонфигурации.ПутьКФайлу) Тогда
			
			СтрокаОбъектКонфигурации.ПутьКФайлу = СтруктураКаталогов.ИмяФайлаОписанияОбъекта(СтрокаОбъектКонфигурации.Наименование, СтрокаОбъектКонфигурации.Тип);
			СтрокаОбъектКонфигурации.ПутьККаталогу = СтруктураКаталогов.КаталогФайловОбъекта(СтрокаОбъектКонфигурации.Наименование, СтрокаОбъектКонфигурации.Тип);
			
		КонецЕсли;

	КонецЦикла

КонецПроцедуры

///////////////////////////////////////////////////////////////////

Функция ПолучитьИмяФормыИзИмениФайлаМодуля(ПолноеИмяФайла)

	МассивЧастейИмени = СтрРазделить(ПолноеИмяФайла, ПолучитьРазделительПути());
	Если МассивЧастейИмени.Количество() > 3 Тогда

		Номер = 2;
		Родитель = МассивЧастейИмени[МассивЧастейИмени.Количество() - Номер];
        Если Родитель = "Form" Тогда

			Номер = Номер + 1;
			Родитель = МассивЧастейИмени[МассивЧастейИмени.Количество() - Номер];

		КонецЕсли;

		Если Родитель = "Ext" Тогда

			Номер = Номер + 1;
			Родитель = МассивЧастейИмени[МассивЧастейИмени.Количество() - Номер];

		КонецЕсли;

		Возврат Родитель;

	Иначе

		ВызватьИсключение "Ошибочная структура имени файла: " + ПолноеИмяФайла;

	КонецЕсли;

	Возврат "";

КонецФункции

Функция ПолучитьИмяКомандыИзИмениФайлаМодуля(ПолноеИмяФайла)

	МассивЧастейИмени = СтрРазделить(ПолноеИмяФайла, ПолучитьРазделительПути());
	Если МассивЧастейИмени.Количество() > 3 Тогда

		Номер = 2;
		Родитель = МассивЧастейИмени[МассивЧастейИмени.Количество() - Номер];
        
		Если Родитель = "Ext" Тогда

			Номер = Номер + 1;
			Родитель = МассивЧастейИмени[МассивЧастейИмени.Количество() - Номер];

		КонецЕсли;

		Возврат Родитель;

	Иначе

		ВызватьИсключение "Ошибочная структура имени файла: " + ПолноеИмяФайла;

	КонецЕсли;

	Возврат "";

КонецФункции

///////////////////////////////////////////////////////////////////

Функция ПрочитатьПодсистемыКонфигурации(ПараметрыЧтения)

	ОписаниеПодсистем = СтруктурыОписаний.ТаблицаОписанияПодсистем();

	Подсистемы = ПараметрыЧтения.ОписаниеКонфигурации.НайтиОбъектыПоТипу("Подсистема");
	
	Для Каждого Подсистема Из Подсистемы Цикл
		
		ПрочитатьПодсистему(ПараметрыЧтения, ОписаниеПодсистем, Подсистема, Истина, Неопределено, Неопределено);

	КонецЦикла;
	
	Возврат ОписаниеПодсистем;

КонецФункции

Процедура ПрочитатьПодсистему(ПараметрыЧтения, ОписаниеПодсистем, ОбъектКонфигурации, Знач Визуальная, Знач Родитель, РодительскаяПодсистема)
	
	ТипПодсистема = ТипыОбъектовКонфигурации.ИмяТипаПодсистема();
	ИмяФайлаОписание = ПараметрыЧтения.СтруктураКаталогов.ИмяФайлаОписанияОбъекта(ОбъектКонфигурации.Наименование, ОбъектКонфигурации.Тип);
	
	СвойстваОписания = ПрочитатьФайлОписанияОбъекта(ПараметрыЧтения, ИмяФайлаОписание, ТипПодсистема);
	
	ОбъектКонфигурации.Описание = СвойстваОписания;
	ОбъектКонфигурации.ПутьКФайлу = ИмяФайлаОписание;
	ОбъектКонфигурации.ПутьККаталогу = ПараметрыЧтения.СтруктураКаталогов.КаталогФайловОбъекта(ОбъектКонфигурации.Наименование, ОбъектКонфигурации.Тип);
	
	Визуальная = Визуальная И СвойстваОписания.ВключатьВКомандныйИнтерфейс;

	ПредставлениеПодсистемы = ?(РодительскаяПодсистема = Неопределено, СвойстваОписания.Синоним, РодительскаяПодсистема.Представление + "/" + СвойстваОписания.Синоним);
	
	Если СвойстваОписания.Состав.Количество() Тогда
		Состав = СвойстваОписания.Состав;
	Иначе
		Состав = Новый Массив();
		Состав.Добавить(Неопределено);
	КонецЕсли;
	
	Для Каждого ОбъектМетаданных Из Состав Цикл
		
		ЭтаПодсистема = ОписаниеПодсистем.Добавить();
		ЭтаПодсистема.Имя = ОбъектКонфигурации.Наименование;
		ЭтаПодсистема.ИмяКратко = СвойстваОписания.Наименование;
		ЭтаПодсистема.Представление = ПредставлениеПодсистемы;
		ЭтаПодсистема.ПредставлениеКратко = СвойстваОписания.Синоним;
		ЭтаПодсистема.ПодсистемаОписание = СвойстваОписания.Комментарий;
		ЭтаПодсистема.ОбъектМетаданных = ОбъектМетаданных;
		ЭтаПодсистема.Визуальная = Визуальная;
		ЭтаПодсистема.Родитель = РодительскаяПодсистема;
		
	КонецЦикла;

	Для Каждого ПолноеИмяПодсистемы Из СвойстваОписания.Подчиненные Цикл
		
		ИмяПодсистемы = СтрРазделить(ПолноеИмяПодсистемы, ".")[1];

		ВложеннаяПодсистема = ПараметрыЧтения.ОписаниеКонфигурации.ОбъектыКонфигурации.Добавить();
		ВложеннаяПодсистема.Тип = ТипПодсистема;
		ВложеннаяПодсистема.Наименование = ОбъектКонфигурации.Наименование + "." + ИмяПодсистемы;
		ВложеннаяПодсистема.ПолноеНаименование = СтрШаблон("%1.%2", ТипПодсистема, ИмяПодсистемы);
		ВложеннаяПодсистема.Родитель = ОбъектКонфигурации;

		ПрочитатьПодсистему(ПараметрыЧтения, ОписаниеПодсистем, ВложеннаяПодсистема, Визуальная, ОбъектКонфигурации, ЭтаПодсистема)
		
	КонецЦикла;

КонецПроцедуры
